<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) IxMilia.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="Build"
  ToolsVersion="12.0">

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <ProjectDir>$(MSBuildThisFileDirectory)IxMilia.Stl</ProjectDir>
    <GitLinkExe>$(MSBuildThisFileDirectory)packages\gitlink\lib\net45\GitLink.exe</GitLinkExe>
    <GitHubUrl>https://github.com/IxMilia/Stl</GitHubUrl>
  </PropertyGroup>

  <UsingTask TaskName="HACK_RemoveFrameworkDependenciesFromNuspec" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <PackagePath ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System" />
      <Reference Include="System.IO" />
      <Reference Include="System.Xml" />
      <Reference Include="System.Xml.Linq" />
      <Reference Include="WindowsBase" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.IO.Packaging" />
      <Using Namespace="System.Xml.Linq" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            using (var package = Package.Open(PackagePath))
            {
                var part = package.GetPart(new Uri("/IxMilia.Stl.nuspec", UriKind.Relative));
                var stream = part.GetStream(FileMode.Open);
                var xml = XDocument.Load(stream);
                var metadata = xml.Root.Element(XName.Get("metadata", xml.Root.Name.NamespaceName));
                var frameworkAssemblies = metadata.Element(XName.Get("frameworkAssemblies", xml.Root.Name.NamespaceName));
                frameworkAssemblies.Remove();
                using (var ms = new MemoryStream())
                {
                    xml.Save(ms);
                    stream.Seek(0, SeekOrigin.Begin);
                    stream.SetLength(ms.Length);
                    ms.Seek(0, SeekOrigin.Begin);
                    ms.CopyTo(stream);
                }
            }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="BuildSource">
    <MSBuild Projects="$(MSBuildThisFileDirectory)..\BuildAndTest.proj"
             Targets="RestorePackages" />
    <Exec Command='dotnet build "$(ProjectDir)" --configuration $(Configuration)' />
  </Target>

  <Target Name="GitLink">
    <Exec Command="git rev-parse --verify HEAD" ConsoleToMSBuild="true" Condition="'$(CommitHash)' == ''">
      <Output TaskParameter="ConsoleOutput" PropertyName="CommitHash" />
    </Exec>
    <Message Text="Creating package for SHA $(CommitHash)" />
    <Exec Command='"$(GitLinkExe)" "$(MSBuildThisFileDirectory).." -u $(GitHubUrl) -s $(CommitHash) -d "$(ProjectDir)\bin\$(Configuration)\netstandard1.0" -ignore IxMilia.Stl.Test' />
    <Exec Command='"$(GitLinkExe)" "$(MSBuildThisFileDirectory).." -u $(GitHubUrl) -s $(CommitHash) -d "$(ProjectDir)\bin\$(Configuration)\portable45-net45+win8+wpa81" -ignore IxMilia.Stl.Test' />
  </Target>

  <Target Name="CreatePackage">
    <PropertyGroup>
      <PackageOutputDir>$(MSBuildThisFileDirectory)Binaries\$(Configuration)</PackageOutputDir>
    </PropertyGroup>
    <Exec Command='dotnet pack "$(ProjectDir)" --configuration $(Configuration) --output "$(PackageOutputDir)" --no-build' />
    <HACK_RemoveFrameworkDependenciesFromNuspec PackagePath="$(PackageOutputDir)\IxMilia.Stl.0.1.1.nupkg" />
    <HACK_RemoveFrameworkDependenciesFromNuspec PackagePath="$(PackageOutputDir)\IxMilia.Stl.0.1.1.symbols.nupkg" />
    <Message Text="#" />
    <Message Text="#" />
    <Message Text="# Package created in '$(PackageOutputDir)'.  Consume the *.symbols.nupkg file." />
    <Message Text="#" />
    <Message Text="#" />
  </Target>

  <Target Name="Build" DependsOnTargets="BuildSource;GitLink;CreatePackage">
  </Target>

</Project>
